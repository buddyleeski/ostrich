//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TimeModel", "FK_Suggestions_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ostrich.Tracker.User), "Suggestion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ostrich.Tracker.Suggestion), true)]
[assembly: EdmRelationshipAttribute("TimeModel", "FK_Timelines_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ostrich.Tracker.User), "Timeline", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ostrich.Tracker.Timeline), true)]
[assembly: EdmRelationshipAttribute("TimeModel", "FK_TimelineTags_Timelines", "Timeline", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ostrich.Tracker.Timeline), "TimelineTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ostrich.Tracker.TimelineTag), true)]
[assembly: EdmRelationshipAttribute("TimeModel", "FK_UserReminderSettings_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ostrich.Tracker.User), "UserReminderSetting", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Ostrich.Tracker.UserReminderSetting), true)]

#endregion

namespace Ostrich.Tracker
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class OstrichTimeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new OstrichTimeEntities object using the connection string found in the 'OstrichTimeEntities' section of the application configuration file.
        /// </summary>
        public OstrichTimeEntities() : base("name=OstrichTimeEntities", "OstrichTimeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OstrichTimeEntities object.
        /// </summary>
        public OstrichTimeEntities(string connectionString) : base(connectionString, "OstrichTimeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OstrichTimeEntities object.
        /// </summary>
        public OstrichTimeEntities(EntityConnection connection) : base(connection, "OstrichTimeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Suggestion> Suggestions
        {
            get
            {
                if ((_Suggestions == null))
                {
                    _Suggestions = base.CreateObjectSet<Suggestion>("Suggestions");
                }
                return _Suggestions;
            }
        }
        private ObjectSet<Suggestion> _Suggestions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Timeline> Timelines
        {
            get
            {
                if ((_Timelines == null))
                {
                    _Timelines = base.CreateObjectSet<Timeline>("Timelines");
                }
                return _Timelines;
            }
        }
        private ObjectSet<Timeline> _Timelines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TimelineTag> TimelineTags
        {
            get
            {
                if ((_TimelineTags == null))
                {
                    _TimelineTags = base.CreateObjectSet<TimelineTag>("TimelineTags");
                }
                return _TimelineTags;
            }
        }
        private ObjectSet<TimelineTag> _TimelineTags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserReminderSetting> UserReminderSettings
        {
            get
            {
                if ((_UserReminderSettings == null))
                {
                    _UserReminderSettings = base.CreateObjectSet<UserReminderSetting>("UserReminderSettings");
                }
                return _UserReminderSettings;
            }
        }
        private ObjectSet<UserReminderSetting> _UserReminderSettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Suggestions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuggestions(Suggestion suggestion)
        {
            base.AddObject("Suggestions", suggestion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Timelines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTimelines(Timeline timeline)
        {
            base.AddObject("Timelines", timeline);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TimelineTags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTimelineTags(TimelineTag timelineTag)
        {
            base.AddObject("TimelineTags", timelineTag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserReminderSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserReminderSettings(UserReminderSetting userReminderSetting)
        {
            base.AddObject("UserReminderSettings", userReminderSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TimeModel", Name="Suggestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Suggestion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Suggestion object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="label">Initial value of the Label property.</param>
        public static Suggestion CreateSuggestion(global::System.Int32 id, global::System.Int32 userId, global::System.DateTime timeStamp, global::System.String label)
        {
            Suggestion suggestion = new Suggestion();
            suggestion.Id = id;
            suggestion.UserId = userId;
            suggestion.TimeStamp = timeStamp;
            suggestion.Label = label;
            return suggestion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Label
        {
            get
            {
                return _Label;
            }
            set
            {
                OnLabelChanging(value);
                ReportPropertyChanging("Label");
                _Label = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Label");
                OnLabelChanged();
            }
        }
        private global::System.String _Label;
        partial void OnLabelChanging(global::System.String value);
        partial void OnLabelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TimeModel", "FK_Suggestions_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TimeModel.FK_Suggestions_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TimeModel.FK_Suggestions_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TimeModel.FK_Suggestions_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TimeModel.FK_Suggestions_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TimeModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TimeModel", Name="Timeline")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Timeline : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Timeline object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="label">Initial value of the Label property.</param>
        public static Timeline CreateTimeline(global::System.Int32 id, global::System.Int32 userId, global::System.DateTime timeStamp, global::System.String label)
        {
            Timeline timeline = new Timeline();
            timeline.Id = id;
            timeline.UserId = userId;
            timeline.TimeStamp = timeStamp;
            timeline.Label = label;
            return timeline;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Label
        {
            get
            {
                return _Label;
            }
            set
            {
                OnLabelChanging(value);
                ReportPropertyChanging("Label");
                _Label = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Label");
                OnLabelChanged();
            }
        }
        private global::System.String _Label;
        partial void OnLabelChanging(global::System.String value);
        partial void OnLabelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TimeModel", "FK_Timelines_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TimeModel.FK_Timelines_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TimeModel.FK_Timelines_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TimeModel.FK_Timelines_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TimeModel.FK_Timelines_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TimeModel", "FK_TimelineTags_Timelines", "TimelineTag")]
        public EntityCollection<TimelineTag> TimelineTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineTag>("TimeModel.FK_TimelineTags_Timelines", "TimelineTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineTag>("TimeModel.FK_TimelineTags_Timelines", "TimelineTag", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TimeModel", Name="TimelineTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TimelineTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimelineTag object.
        /// </summary>
        /// <param name="timelineId">Initial value of the TimelineId property.</param>
        /// <param name="tag">Initial value of the Tag property.</param>
        public static TimelineTag CreateTimelineTag(global::System.Int32 timelineId, global::System.String tag)
        {
            TimelineTag timelineTag = new TimelineTag();
            timelineTag.TimelineId = timelineId;
            timelineTag.Tag = tag;
            return timelineTag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TimelineId
        {
            get
            {
                return _TimelineId;
            }
            set
            {
                if (_TimelineId != value)
                {
                    OnTimelineIdChanging(value);
                    ReportPropertyChanging("TimelineId");
                    _TimelineId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TimelineId");
                    OnTimelineIdChanged();
                }
            }
        }
        private global::System.Int32 _TimelineId;
        partial void OnTimelineIdChanging(global::System.Int32 value);
        partial void OnTimelineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tag
        {
            get
            {
                return _Tag;
            }
            set
            {
                if (_Tag != value)
                {
                    OnTagChanging(value);
                    ReportPropertyChanging("Tag");
                    _Tag = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Tag");
                    OnTagChanged();
                }
            }
        }
        private global::System.String _Tag;
        partial void OnTagChanging(global::System.String value);
        partial void OnTagChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TimeModel", "FK_TimelineTags_Timelines", "Timeline")]
        public Timeline Timeline
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Timeline>("TimeModel.FK_TimelineTags_Timelines", "Timeline").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Timeline>("TimeModel.FK_TimelineTags_Timelines", "Timeline").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Timeline> TimelineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Timeline>("TimeModel.FK_TimelineTags_Timelines", "Timeline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Timeline>("TimeModel.FK_TimelineTags_Timelines", "Timeline", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TimeModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="isAdmin">Initial value of the IsAdmin property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String userName, global::System.Boolean isAdmin)
        {
            User user = new User();
            user.Id = id;
            user.UserName = userName;
            user.IsAdmin = isAdmin;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAdmin
        {
            get
            {
                return _IsAdmin;
            }
            set
            {
                OnIsAdminChanging(value);
                ReportPropertyChanging("IsAdmin");
                _IsAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAdmin");
                OnIsAdminChanged();
            }
        }
        private global::System.Boolean _IsAdmin;
        partial void OnIsAdminChanging(global::System.Boolean value);
        partial void OnIsAdminChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TimeModel", "FK_Suggestions_Users", "Suggestion")]
        public EntityCollection<Suggestion> Suggestions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Suggestion>("TimeModel.FK_Suggestions_Users", "Suggestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Suggestion>("TimeModel.FK_Suggestions_Users", "Suggestion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TimeModel", "FK_Timelines_Users", "Timeline")]
        public EntityCollection<Timeline> Timelines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Timeline>("TimeModel.FK_Timelines_Users", "Timeline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Timeline>("TimeModel.FK_Timelines_Users", "Timeline", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TimeModel", "FK_UserReminderSettings_Users", "UserReminderSetting")]
        public UserReminderSetting UserReminderSetting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserReminderSetting>("TimeModel.FK_UserReminderSettings_Users", "UserReminderSetting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserReminderSetting>("TimeModel.FK_UserReminderSettings_Users", "UserReminderSetting").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserReminderSetting> UserReminderSettingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserReminderSetting>("TimeModel.FK_UserReminderSettings_Users", "UserReminderSetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserReminderSetting>("TimeModel.FK_UserReminderSettings_Users", "UserReminderSetting", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TimeModel", Name="UserReminderSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserReminderSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserReminderSetting object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="frequency">Initial value of the Frequency property.</param>
        public static UserReminderSetting CreateUserReminderSetting(global::System.Int32 userId, global::System.Boolean enabled, global::System.Int32 frequency)
        {
            UserReminderSetting userReminderSetting = new UserReminderSetting();
            userReminderSetting.UserId = userId;
            userReminderSetting.Enabled = enabled;
            userReminderSetting.Frequency = frequency;
            return userReminderSetting;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Frequency
        {
            get
            {
                return _Frequency;
            }
            set
            {
                OnFrequencyChanging(value);
                ReportPropertyChanging("Frequency");
                _Frequency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Frequency");
                OnFrequencyChanged();
            }
        }
        private global::System.Int32 _Frequency;
        partial void OnFrequencyChanging(global::System.Int32 value);
        partial void OnFrequencyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TimeModel", "FK_UserReminderSettings_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TimeModel.FK_UserReminderSettings_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TimeModel.FK_UserReminderSettings_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TimeModel.FK_UserReminderSettings_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TimeModel.FK_UserReminderSettings_Users", "User", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
